<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Shaw的开发之旅</title>
  <subtitle>Step by step to subvert the life!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="shawcz.github.io/"/>
  <updated>2017-05-17T13:57:06.641Z</updated>
  <id>shawcz.github.io/</id>
  
  <author>
    <name>shaw</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>安卓笔记三：启动Activity技巧</title>
    <link href="shawcz.github.io/2017/05/17/%E5%AE%89%E5%8D%93%E7%AC%94%E8%AE%B0%E4%BA%8C%EF%BC%9A%E5%90%AF%E5%8A%A8Activity%E6%8A%80%E5%B7%A7/"/>
    <id>shawcz.github.io/2017/05/17/安卓笔记二：启动Activity技巧/</id>
    <published>2017-05-17T12:16:16.000Z</published>
    <updated>2017-05-17T13:57:06.641Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、知晓当前是在哪一个活动"><a href="#一、知晓当前是在哪一个活动" class="headerlink" title="一、知晓当前是在哪一个活动"></a>一、知晓当前是在哪一个活动</h3><p><code>根据程序当前的界面就能判断出这是哪一个活动。真正进入到企业之后，更有可能的是接手一份别人写的代码，因为你刚进公司就正好有一个新项目启动的概率并不高。阅读别人的代码时有一个很头疼的问题，就是你需要在某个界面上修改一些非常简单的东西，但是你半天找不到这个界面对应的活动是哪一个。</code></p>
<p><code>在ActivityTest项目的基础上修改。首先需要新建一个BaseActivity继承自Activity，然后在BaseActivity中重写onCreate()方法，如下所示：</code></p>
<pre><code>public class BaseActivity extends Activity {            
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        Log.d(&quot;BaseActivity&quot;, getClass().getSimpleName());
    }

}
</code></pre><p><code>在onCreate()方法中获取了当前实例的类名，并通过Log打印了出来。接下来让BaseActivity成为ActivityTest项目中所有活动的父类。修改FirstActivity、SecondActivity和ThirdActivity的继承结构，让它们不再继承自Activity，而是继承自BaseActivity。虽然项目中的活动不再直接继承自Activity了，但是它们仍然完全继承了Activity中的所有特性。现在重新运行程序，然后通过点击按钮分别进入到FirstActivity、SecondActivity和ThirdActivity的界面，这时观察LogCat中的打印信息，现在每当我们进入到一个活动的界面，该活动的类名就会被打印出来，这样我们就可以时时刻刻知晓当前界面对应的是哪一个活动了。</code></p>
<h3 id="二、随时随地退出程序"><a href="#二、随时随地退出程序" class="headerlink" title="二、随时随地退出程序"></a>二、随时随地退出程序</h3><p>新建一个ActivityCollector类作为活动管理器，代码如下所示： </p>
<pre><code>public class ActivityCollector {

    public static List&lt;Activity&gt; activities = new ArrayList&lt;Activity&gt;();

    public static void addActivity(Activity activity) {
        activities.add(activity);
    }

    public static void removeActivity(Activity activity) {
        activities.remove(activity);
    }

    public static void finishAll() {
        for (Activity activity : activities) {
            if (!activity.isFinishing()) {
                activity.finish();
            }
        }
    }
}
</code></pre><p><code>在活动管理器中，通过一个List来暂存活动，然后提供了一个addActivity()方法用于向List中添加一个活动，提供了一个removeActivity()方法用于从List中移除活动，最后提供了一个finishAll()方法用于将List中存储的活动全部都销毁掉。</code></p>
<p>接下来修改BaseActivity中的代码，如下所示：</p>
<pre><code>public class BaseActivity extends Activity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        Log.d(&quot;BaseActivity&quot;, getClass().getSimpleName());
        ActivityCollector.addActivity(this);
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        ActivityCollector.removeActivity(this);
    }

}
</code></pre><p><code>在BaseActivity的onCreate()方法中调用了ActivityCollector的addActivity()方法，表明将当前正在创建的活动添加到活动管理器里。在BaseActivity中重写onDestroy()方法，并调用了ActivityCollector的removeActivity()方法，表明将一个马上要销毁的活动从活动管理器里移除。从此以后，不管在什么地方退出程序，只需要调用ActivityCollector.finishAll()方法就可以。</code></p>
<p>例如在ThirdActivity界面想通过点击按钮直接退出程序，只需将代码改成如下所示：</p>
<pre><code>public class ThirdActivity extends BaseActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        Log.d(&quot;ThirdActivity&quot;, &quot;Task id is &quot; + getTaskId());
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        setContentView(R.layout.third_layout);
        Button button3 = (Button) findViewById(R.id.button_3);
        button3.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View v) {
                ActivityCollector.finishAll();
            }
        });
    }

}
</code></pre><p><code>当然还可以在销毁所有活动的代码后面再加上杀掉当前进程的代码，以保证程序完全退出。</code></p>
<h3 id="三、启动活动的最佳写法"><a href="#三、启动活动的最佳写法" class="headerlink" title="三、启动活动的最佳写法"></a>三、启动活动的最佳写法</h3><p><code>假设SecondActivity中需要用到两个非常重要的字符串参数，在启动SecondActivity的时候必须要传递过来，很容易会写出如下代码：</code></p>
<pre><code>Intent intent = new Intent(FirstActivity.this, SecondActivity.class);
intent.putExtra(&quot;param1&quot;, &quot;data1&quot;);
intent.putExtra(&quot;param2&quot;, &quot;data2&quot;);
startActivity(intent);
</code></pre><p><code>这样写是完全正确的，不管是从语法上还是规范上，只是在真正的项目开发中经常会有对接的问题出现。比如SecondActivity并不是由你开发的，但现在你负责的部分需要有启动SecondActivity这个功能，而你却不清楚启动这个活动需要传递哪些数据。这时无非就有两种办法，一个是你自己去阅读SecondActivity中的代码，二是询问负责编写SecondActivity的同事。</code></p>
<p>修改SecondActivity中的代码，如下所示：</p>
<pre><code>public class SecondActivity extends BaseActivity {

    public static void actionStart(Context context, String data1, String data2) {
        Intent intent = new Intent(context, SecondActivity.class);
        intent.putExtra(&quot;param1&quot;, data1);
        intent.putExtra(&quot;param2&quot;, data2);
        context.startActivity(intent);
    }
    ……
}
</code></pre><p><code>在SecondActivity中添加了一个actionStart()方法，在这个方法中完成了Intent的构建，另外所有SecondActivity中需要的数据都是通过actionStart()方法的参数传递过来的，然后把它们存储到Intent中，最后调用startActivity()方法启动SecondActivity。</code></p>
<p><code>SecondActivity所需要的数据全部都在方法参数中体现出来，这样即使不用阅读SecondActivity中的代码，或者询问负责编写SecondActivity的同事，你也可以非常清晰地知道启动SecondActivity需要传递哪些数据。这样写还简化了启动活动的代码，现在只需要一行代码就可以启动SecondActivity，如下所示：</code></p>
<pre><code>button1.setOnClickListener(new OnClickListener() {
    @Override
    public void onClick(View v) {
        SecondActivity.actionStart(FirstActivity.this, &quot;data1&quot;, &quot;data2&quot;);
    }
});
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、知晓当前是在哪一个活动&quot;&gt;&lt;a href=&quot;#一、知晓当前是在哪一个活动&quot; class=&quot;headerlink&quot; title=&quot;一、知晓当前是在哪一个活动&quot;&gt;&lt;/a&gt;一、知晓当前是在哪一个活动&lt;/h3&gt;&lt;p&gt;&lt;code&gt;根据程序当前的界面就能判断出这是哪一个活
    
    </summary>
    
    
      <category term="Android" scheme="shawcz.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>安卓笔记二：Activity数据传输</title>
    <link href="shawcz.github.io/2017/05/15/%E5%AE%89%E5%8D%93%E7%AC%94%E8%AE%B0%E4%BA%8C%EF%BC%9AActivity%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93/"/>
    <id>shawcz.github.io/2017/05/15/安卓笔记二：Activity数据传输/</id>
    <published>2017-05-15T11:15:16.000Z</published>
    <updated>2017-05-17T13:57:50.883Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、Intent使用"><a href="#一、Intent使用" class="headerlink" title="一、Intent使用"></a>一、Intent使用</h2><blockquote>
<p>Intent是Android程序中各组件之间进行交互的一种重要方式，它不仅可以指明当前组件想要执行的动作，还可以在不同组件之间传递数据。一般可被用于启动活动、启动服务、以及发送广播等场景. </p>
</blockquote>
<h3 id="1-显示Intent"><a href="#1-显示Intent" class="headerlink" title="1.显示Intent"></a>1.显示Intent</h3><p><code>Intent有多个构造函数的重载，其中一个是Intent(Context packageContext, Class&lt;?&gt; cls)。这个构造函数接收两个参数，第一个参数Context要求提供一个启动活动的上下文，第二个参数Class则是指定想要启动的目标活动，通过这个构造函数就可以构建出Intent的“意图”。</code></p>
<pre><code>button1.setOnClickListener(new OnClickListener() {
    @Override
    public void onClick(View v) {
        Intent intent = new Intent(FirstActivity.this, SecondActivity.class);
        startActivity(intent);
    }
});
</code></pre><h3 id="2-隐示Intent"><a href="#2-隐示Intent" class="headerlink" title="2.隐示Intent"></a>2.隐示Intent</h3><p><code>隐式Intent，它并不明确指出想要启动哪一个活动，而是指定了一系列更为抽象的action和category等信息，然后交由系统去分析这个Intent，并帮我们找出合适的活动去启动。通过在&lt;activity&gt;标签下配置&lt;intent-filter&gt;的内容，可以指定当前活动能够响应的action和category，打开AndroidManifest.xml，添加如下代码：</code></p>
<pre><code>&lt;activity android:name=&quot;.SecondActivity&quot; &gt;
    &lt;intent-filter&gt;
        &lt;action android:name=&quot;com.example.activitytest.ACTION_START&quot; /&gt;
        &lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&gt;
    &lt;/intent-filter&gt;
&lt;/activity&gt;
</code></pre><p><code>在&lt;action&gt;标签中指明当前活动可以响应com.example.activitytest.ACTION_ START这个action，而&lt;category&gt;标签则包含了一些附加信息，更精确地指明了当前的活动能够响应的Intent中还可能带有的category。只有&lt;action&gt;和&lt;category&gt;中的内容同时能够匹配上Intent中指定的action和category时，这个活动才能响应该Intent。修改FirstActivity中按钮的点击事件，代码如下所示：</code></p>
<pre><code>button1.setOnClickListener(new OnClickListener() {
    @Override
    public void onClick(View v) {
        Intent intent = new Intent(&quot;com.example.activitytest.ACTION_START&quot;);
        startActivity(intent);
    }
});
</code></pre><p><code>使用了Intent的另一个构造函数，直接将action的字符串传了进去，表明我们想要启动能够响应com.example.activitytest.ACTION_START这个action的活动。&lt;action&gt;和&lt;category&gt;同时匹配上才能响应,因为android.intent.category.DEFAULT是一种默认的category，在调用startActivity()方法的时候会自动将这个category添加到Intent中.</code></p>
<h3 id="3-intent传值"><a href="#3-intent传值" class="headerlink" title="3.intent传值"></a>3.intent传值</h3><p>第一个activity传值：</p>
<pre><code>String data = &quot;Hello SecondActivity&quot;;
Intent intent = new Intent(FirstActivity.this, SecondActivity.class);
intent.putExtra(&quot;extra_data&quot;, data);
startActivity(intent);
</code></pre><p>第二个activity接收值：</p>
<pre><code>Intent intent = getIntent();
String data = intent.getStringExtra(&quot;extra_data&quot;);
</code></pre><h3 id="4-返回数据给上一个活动"><a href="#4-返回数据给上一个活动" class="headerlink" title="4.返回数据给上一个活动"></a>4.返回数据给上一个活动</h3><p><code>Activity中还有一个startActivityForResult()方法也是用于启动活动的，但这个方法期望在活动销毁的时候能够返回一个结果给上一个活动,startActivityForResult()方法接收两个参数，第一个参数还是Intent，第二个参数是请求码，用于在之后的回调中判断数据的来源</code></p>
<p><code>startActivityForResult()方法来启动SecondActivity，请求码只要是一个唯一值就可以了，这里传入了1。</code></p>
<pre><code>button.setOnClickListener(new OnClickListener() {
    @Override
    public void onClick(View v) {
        Intent intent = new Intent(FirstActivity.this, SecondActivity.class);
        startActivityForResult(intent, 1);
    }
});
</code></pre><p><code>把要传递的数据存放在Intent中，然后调用了setResult()方法,用于向上一个活动返回数据的。setResult()方法接收两个参数，第一个参数用于向上一个活动返回处理结果，一般只使用RESULT_OK或RESULT_CANCELED这两个值，第二个参数则是把带有数据的Intent传递回去，然后调用了finish()方法来销毁当前活动。</code></p>
<pre><code>button2.setOnClickListener(new OnClickListener() {
    @Override
    public void onClick(View v) {
        Intent intent = new Intent();
        intent.putExtra(&quot;data_return&quot;, &quot;Hello FirstActivity&quot;);    
        setResult(RESULT_OK, intent);
        finish();
    }
});
</code></pre><p><code>使用startActivityForResult()方法来启动SecondActivity的，在SecondActivity被销毁之后会回调上一个活动的onActivityResult()方法，需要在FirstActivity中重写这个方法来得到返回的数据</code></p>
<pre><code>@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data{
    switch (requestCode) {
    case 1:
        if (resultCode == RESULT_OK) {
            String returnedData = data.getStringExtra(&quot;data_return&quot;);
            Log.d(&quot;FirstActivity&quot;, returnedData);
        }
        break;
    default:
    }
}
</code></pre><p><code>onActivityResult()方法带有三个参数，第一个参数requestCode，即在启动活动时传入的请求码。第二个参数resultCode，即在返回数据时传入的处理结果。第三个参数data，即携带着返回数据的Intent。由于在一个活动中有可能调用startActivityForResult()方法去启动很多不同的活动，每一个活动返回的数据都会回调到onActivityResult()这个方法中，因此首先要做的就是通过检查requestCode的值来判断数据来源。确定数据是从SecondActivity返回的之后，再通过resultCode的值来判断处理结果是否成功。</code></p>
<p><code>如果用户在SecondActivity中并不是通过点击按钮，而是通过按下Back键回到FirstActivity，这样数据不就没法返回了吗？没错，不过这种情况还是很好处理的，我们可以通过重写onBackPressed()方法来解决这个问题，这样的话，当用户按下Back键，就会去执行onBackPressed()方法中的代码，我们在这里添加返回数据的逻辑就行</code></p>
<pre><code>@Override
public void onBackPressed() {
    Intent intent = new Intent();
    intent.putExtra(&quot;data_return&quot;, &quot;Hello FirstActivity&quot;);
    setResult(RESULT_OK, intent);
    finish();
}
</code></pre><h3 id="二、活动被回收了怎么办"><a href="#二、活动被回收了怎么办" class="headerlink" title="二、活动被回收了怎么办"></a>二、活动被回收了怎么办</h3><p><code>活动进入到了停止状态，可能被系统回收的，应用中有一个活动A，用户在活动A的基础上启动了活动B，活动A就进入了停止状态，这个时候由于系统内存不足，将活动A回收掉了，然后用户按下Back键返回活动A，还是会正常显示活动A的，只不过这时并不会执行onRestart()方法，而是会执行活动A的onCreate()方法，因为活动A在这种情况下会被重新创建一次。</code></p>
<p><code>这样看上去好像一切正常，可是别忽略了一个重要问题，活动A中是可能存在临时数据和状态的。打个比方，MainActivity中有一个文本输入框，现在你输入了一段文字，然后启动NormalActivity，这时MainActivity由于系统内存不足被回收掉，过了一会你又点击了Back键回到MainActivity，你会发现刚刚输入的文字全部都没了，因为MainActivity被重新创建了。</code></p>
<p><code>如果应用出现了这种情况，是会严重影响用户体验的，所以必须要想想办法解决这个问题。查阅文档可以看出，Activity中还提供了一个onSaveInstanceState()回调方法，这个方法会保证一定在活动被回收之前调用，因此我们可以通过这个方法来解决活动被回收时临时数据得不到保存的问题。</code></p>
<p><code>onSaveInstanceState()方法会携带一个Bundle类型的参数，Bundle提供了一系列的方法用于保存数据，比如可以使用putString()方法保存字符串，使用putInt()方法保存整型数据，以此类推。每个保存方法需要传入两个参数，第一个参数是键，用于后面从Bundle中取值，第二个参数是真正要保存的内容。</code></p>
<p>在MainActivity中添加如下代码就可以将临时数据进行保存：</p>
<pre><code>@Override
protected void onSaveInstanceState(Bundle outState) {
    super.onSaveInstanceState(outState);
    String tempData = &quot;Something you just typed&quot;;
    outState.putString(&quot;data_key&quot;, tempData);
}
</code></pre><p><code>一直使用的onCreate()方法其实也有一个Bundle类型的参数。这个参数在一般情况下都是null，但是当活动被系统回收之前有通过onSaveInstanceState()方法来保存数据的话，这个参数就会带有之前所保存的全部数据，只需要再通过相应的取值方法将数据取出即可。取出值之后再做相应的恢复操作就可以了，比如说将文本内容重新赋值到文本输入框上，这里我们只是简单地打印一下。</code></p>
<p>修改MainActivity的onCreate()方法，如下所示：</p>
<pre><code>@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    Log.d(TAG, &quot;onCreate&quot;);
    requestWindowFeature(Window.FEATURE_NO_TITLE);
    setContentView(R.layout.activity_main);
    if (savedInstanceState != null) {
        String tempData = savedInstanceState.getString(&quot;data_key&quot;);
        Log.d(TAG, tempData);
    }
    ……
}
</code></pre><p><code>使用Bundle来保存和取出数据和使用Intent传递数据时也是用的类似的方法。Intent还可以结合Bundle一起用于传递数据的，首先可以把需要传递的数据都保存在Bundle对象中，然后再将Bundle对象存放在Intent里。到了目标活动之后先从Intent中取出Bundle，再从Bundle中一一取出数据。</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、Intent使用&quot;&gt;&lt;a href=&quot;#一、Intent使用&quot; class=&quot;headerlink&quot; title=&quot;一、Intent使用&quot;&gt;&lt;/a&gt;一、Intent使用&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Intent是Android程序中各组件之间进行交
    
    </summary>
    
    
      <category term="Android" scheme="shawcz.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>安卓笔记一：Activity</title>
    <link href="shawcz.github.io/2017/05/12/%E5%AE%89%E5%8D%93%E7%AC%94%E8%AE%B0%E4%B8%80%EF%BC%9AActivity/"/>
    <id>shawcz.github.io/2017/05/12/安卓笔记一：Activity/</id>
    <published>2017-05-12T06:36:16.000Z</published>
    <updated>2017-05-17T13:23:49.011Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、新建MainActivity，绑定布局main-activity-xml"><a href="#一、新建MainActivity，绑定布局main-activity-xml" class="headerlink" title="一、新建MainActivity，绑定布局main_activity.xml"></a>一、新建MainActivity，绑定布局main_activity.xml</h2><pre><code>public class MainActivity extends Activity{
    @Override
    protect void onCreate(Bundle saveInstanceState){
        super.onCreate(saveInstanceState);
        setContentView(R.layout.main_activity);
    }
}
</code></pre><h2 id="二、在AndroidManifest-xml注册MainActivity"><a href="#二、在AndroidManifest-xml注册MainActivity" class="headerlink" title="二、在AndroidManifest.xml注册MainActivity"></a>二、在AndroidManifest.xml注册MainActivity</h2><pre><code>&lt;activity
    android:name=&quot;.MainActivity&quot;
    android:lable=&quot;This is MainActivity&quot;&gt;
    &lt;intent-fifter&gt;
        &lt;action android:name=&quot;android.intent.MAIN&quot;/&gt;
        &lt;category android:name=&quot;android.intent.category.LAUCHER&quot;/&gt;
    &lt;/intent-fifter&gt;
&lt;/activity&gt;
</code></pre><p><code>intent-fifter里的内容表示：程序的主活动为MainActivity，点击桌面图标首先打开的就是这个活动</code></p>
<h2 id="三、MainActivity隐藏标题栏"><a href="#三、MainActivity隐藏标题栏" class="headerlink" title="三、MainActivity隐藏标题栏"></a>三、MainActivity隐藏标题栏</h2><pre><code>protect void onCreate(Bundle saveInstanceState){
    super.onCreate(saveInstanceState);
    requestWindowFeature(Window.FEATURE_NO_TITLE);
    setContentView(R.layout.main_activity);
}
</code></pre><p><code>requestWindowFeature(Window.FEATURE_NO_TITLE);表示不在活动中显示标题栏，且这段代码必须在setContentView()前执行，否则会报错</code></p>
<h2 id="四、在活动中使用Toast"><a href="#四、在活动中使用Toast" class="headerlink" title="四、在活动中使用Toast"></a>四、在活动中使用Toast</h2><pre><code>button1.setOnClickListener(new OnClickListener() {
    @Override
    public void onClick(View v) {
        Toast.makeText(FirstActivity.this, &quot;You clicked Button 1&quot;,Toast.LENGTH_SHORT).show();
    }
});
</code></pre><p><code>Toast的用法非常简单，通过静态方法makeText()创建出一个Toast对象，然后调用show()将Toast显示出来就可以了。这里需要注意的是，makeText()方法需要传入三个参数。第一个参数是Context，也就是Toast要求的上下文，由于活动本身就是一个Context对象，因此这里直接传入FirstActivity.this即可。第二个参数是Toast显示的文本内容，第三个参数是Toast显示的时长，有两个内置常量可以选择Toast.LENGTH_SHORT和Toast.LENGTH_LONG。</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、新建MainActivity，绑定布局main-activity-xml&quot;&gt;&lt;a href=&quot;#一、新建MainActivity，绑定布局main-activity-xml&quot; class=&quot;headerlink&quot; title=&quot;一、新建MainActivity
    
    </summary>
    
    
      <category term="Android" scheme="shawcz.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Java Web环境搭建</title>
    <link href="shawcz.github.io/2017/03/09/Java%20Web%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>shawcz.github.io/2017/03/09/Java Web环境搭建/</id>
    <published>2017-03-09T06:36:16.000Z</published>
    <updated>2017-05-15T10:55:22.617Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java-Web环境搭建"><a href="#Java-Web环境搭建" class="headerlink" title="Java Web环境搭建"></a>Java Web环境搭建</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>下载:<code>jak1.7</code> ; <code>Tomcat7</code>; <code>Navicat</code>; <code>MyEclipse8.6</code>;<br><code>Mysql5.0.22</code></p>
<p>在<code>E:\Program Files</code>里分别新建Java、Tomcat、Navicat、MyEclipse文件夹；在<code>E:\work</code>中新建<code>workpace</code>文件夹</p>
<h2 id="JDK安装与配置"><a href="#JDK安装与配置" class="headerlink" title="JDK安装与配置"></a>JDK安装与配置</h2><p><code>JDK是 Java 语言的软件开发工具包，主要用于移动设备、嵌入式设备上的java应用程序。JDK是整个java开发的核心，它包含了JAVA的运行环境，JAVA工具和JAVA基础的类库.</code></p>
<h3 id="安装JDK-32位"><a href="#安装JDK-32位" class="headerlink" title="安装JDK(32位)"></a>安装JDK(32位)</h3><p><a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="external">下载JDK</a><br>点击安装：<br>1.更改路径，选择在<code>E盘</code>新建的<code>Java8</code>文件夹</p>
<p>2.在<code>Java</code>文件夹内新建<code>jre8</code>文件夹：<br><img src="http://i.imgur.com/leNz1nR.png" alt=""><br><img src="http://i.imgur.com/owQCSB7.png" alt=""></p>
<h3 id="配置JDK"><a href="#配置JDK" class="headerlink" title="配置JDK"></a>配置JDK</h3><table>
<thead>
<tr>
<th style="text-align:left">环境变量</th>
<th>路径</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">JAVA_HOME8</td>
<td>E:\ProgramFiles\Java8\jdk1.8.0_65</td>
</tr>
<tr>
<td style="text-align:left">path</td>
<td>%JAVA_HOME8%\bin;</td>
</tr>
<tr>
<td style="text-align:left">classpath</td>
<td>.;%JAVA_HOME8%\lib\dt.jar;%JAVA_HOME8%\lib\tools.jar;</td>
</tr>
</tbody>
</table>
<p><img src="http://i.imgur.com/E26iHT1.png" alt=""><br><img src="http://i.imgur.com/HtuA3G7.png" alt=""><br><img src="http://i.imgur.com/xf7Tqk0.png" alt=""></p>
<p>验证：<code>win+R</code>  输入<code>cmd</code>  接着输入命令：<code>java -version</code> 若弹出jdk版本信息，说明安装成功！</p>
<h2 id="Mysql安装与配置"><a href="#Mysql安装与配置" class="headerlink" title="Mysql安装与配置"></a>Mysql安装与配置</h2><pre><code>MySQL 是一个关系型数据库管理系统，因为体积小、速度快而受到大家的喜欢，但是MySQL没有图形化的操作界面。
</code></pre><h3 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h3><p>1.双击Setup.exe文件，开始mysql的安装。出现下面的窗口<br><img src="http://i.imgur.com/T76PsXB.png" alt=""></p>
<p>2.点击Next开始下一步安装。默认是<code>Typical</code>，默认安装在C盘<br><img src="http://i.imgur.com/eIhrjIc.png" alt=""></p>
<p>3.这里需要不选择组件和更改文件夹位置，点击<code>next</code></p>
<p>4.点击<code>Install</code>开始安装<br><img src="http://i.imgur.com/3DxtUIf.png" alt=""></p>
<p>5.安装完成，选择<code>Skip Sign-Up</code></p>
<p>6.点击完成<code>Finsh</code><br><img src="http://i.imgur.com/9dAeJ0u.png" alt=""></p>
<h3 id="配置Mysql"><a href="#配置Mysql" class="headerlink" title="配置Mysql"></a>配置Mysql</h3><p>7.点击<code>Next</code>继续<br><img src="http://i.imgur.com/sl4eFmj.png" alt=""></p>
<p>8.选择<code>Detailed Configuration</code>，点<code>Next</code><br><img src="http://i.imgur.com/Vreli7O.png" alt=""></p>
<p>9.下面这个选项是选择mysql应用类型（第一种是开发服务器，将只用尽量少的内存，第二种是普通WEB服务器，将使用中等数量内存，最后一种是这台服务器上面只跑mysql数据库，将占用全部的内存，）这里选择开发服务器<code>Developer Machine</code>，占用尽量少的内存<br><img src="http://i.imgur.com/X4SpQWf.png" alt=""></p>
<p>10.接下来选择数据库用途，（第一种是多功能用途，将把数据库优化成很好的innodb存储类型和高效率的myisam存储类型，第二种是只用于事务处理类型，最好的优化innodb，但同时也支持myisam，最后一种是非事务处理类型，适合于简单的应用，只有不支持事务的myisam类型是被支持的）一般选择第一种多功能<code>Multifunctional Database</code><br><img src="http://i.imgur.com/KXkBXP9.png" alt=""></p>
<p>11.下面是选择数据存放位置，默认<br><img src="http://i.imgur.com/ZZ39gnT.png" alt=""></p>
<p>12.选择mysql允许的最大连接数，第一种是最大20个连接并发数，第二种是最大500个并发连接数，最后一种是自定义，选择最后一种<code>Manual Setting</code> 选择<code>15</code><br><img src="http://i.imgur.com/AgEbmgb.png" alt=""></p>
<p>13.下面是选择数据库监听的端口，一般默认是<code>3306</code>，如果改成其他端口，以后连接数据库的时候都要记住修改的端口，否则不能连接mysql数据库，比较麻烦，这里不做修改，用mysq的默认端口：<code>3306</code>。接下来默认latin1。<br><img src="http://i.imgur.com/5FswNeG.png" alt=""><br><img src="http://i.imgur.com/v8YL98Z.png" alt=""></p>
<p>14.这一步是设置mysql的超级用户密码，这个超级用户非常重要，对mysql拥有全部的权限，请设置好并牢记超级用户的密码，下面有个复选框是选择是否允许远程机器用root用户连接到你的mysql服务器上面，如果有这个需求，也勾选<br><img src="http://i.imgur.com/UusP5id.png" alt=""></p>
<p>15.当两次输入的密码一致后，记住该密码，点<code>Next</code>继续。 等待就完成了。<br><img src="http://i.imgur.com/D8xVK5k.png" alt=""></p>
<h3 id="容易出现的问题"><a href="#容易出现的问题" class="headerlink" title="容易出现的问题"></a>容易出现的问题</h3><p>mysql 安装到最后一步时<code>start service</code> 为失败状态。</p>
<p>方式1  MySQL安装是出现could not start the service mysql error:0 提示错误<br>解决方法：首 先，在<code>管理工具</code>-&gt;<code>服务</code>里面将<code>MySQL</code>的服务给停止，然后打开<code>cmd</code>进入你的    <code>MySQL bin</code>目录下，例如 <code>C:\Program Files\MySQL\MySQL Server 5.0\bin</code> 然后使用如下命令<code>mysqld-nt -remove</code> 然后就会显示……success! 好了下面进入添加删除程序，找到MySQL选择卸载，记得选择remove。最后将MySQL目录删除，还有数据库的目录也删除<br>方式2<br>查看<code>服务</code>中有没有mysql,如果有将该服务停掉; 安装mysql 5.1.33,在运行Server Instance Configuration wizard时的Execute configurattion步骤中的第三项Start Service进出错,<code>错误提示为Could not start the service MySQL (出现这种情况一般是因为装过mysql，卸载不干净造成的</code>。卸载后重启后再重装。注意看下服务，如果未能卸载，可以用<code>mysqld-nt -remove卸载</code>)<br>在控制面板中运行添加删除程序，将mysql卸载; 卸载后打开注册表，查看<code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services</code>下的键值，如果有<code>相关mysql键值(mysql、mysqladmin)则删掉</code>，即可;<br>重启，将mysql的<code>安装残余目录删掉</code>(查看服务，此时服务中已没有mysql); 重新安装mysql.安装后先不要运行Server Instance Configuration wizard，重启后在开始菜单中运行该向导，即可.</p>
<h2 id="Navicat安装与配置"><a href="#Navicat安装与配置" class="headerlink" title="Navicat安装与配置"></a>Navicat安装与配置</h2><pre><code>`Navicat for MySQL`是一套专为MySQL设计的强大数据库管理及开发工具
</code></pre><h3 id="安装Navicat"><a href="#安装Navicat" class="headerlink" title="安装Navicat"></a>安装Navicat</h3><p>1.点击Navicat 8 for MySQL安装文件<br><img src="http://i.imgur.com/YpqalB5.png" alt=""></p>
<p>2.选择“我同意”，点击“下一步”<br><img src="http://i.imgur.com/jlkLFfF.png" alt=""></p>
<p>3.选择安装新建的目录，点击“下一步”<br><img src="http://i.imgur.com/3BpRlm6.png" alt=""></p>
<p>4.保留默认值，点击“下一步”<br><img src="http://chuantu.biz/t5/86/1494843563x2890173777.png" alt=""></p>
<p>5.选择是否创建桌面图标和快捷图标，保留默认值，点击“下一步”<br><img src="http://chuantu.biz/t5/86/1494843694x2890173777.png" alt=""></p>
<p>6.点击“安装”<br><img src="http://chuantu.biz/t5/86/1494843730x2890173777.png" alt=""></p>
<p>7.安装结束后，点击“完成”</p>
<h2 id="Tomcat安装与配置"><a href="#Tomcat安装与配置" class="headerlink" title="Tomcat安装与配置"></a>Tomcat安装与配置</h2><pre><code>Tomcat 6.0（ Servlet和JSP容器，具有处理HTML页面的功能）
</code></pre><h3 id="安装Tomcat7"><a href="#安装Tomcat7" class="headerlink" title="安装Tomcat7"></a>安装Tomcat7</h3><p>1.双击运行：<code>apache-tomcat-7.0.53.exe</code>；单击<code>next</code>下一步阅读协议<br><img src="http://chuantu.biz/t5/86/1494843798x2890173777.png" alt=""></p>
<p>2.单击<code>I Agree</code>：<br><img src="http://chuantu.biz/t5/86/1494843827x2890173777.png" alt=""></p>
<p>3.单击<code>next</code>：<br><img src="http://chuantu.biz/t5/86/1494843863x2890173777.png" alt=""></p>
<p>4.查看端口号，选择默认，单击<code>next</code>：<br><img src="http://chuantu.biz/t5/86/1494843890x2890173777.png" alt=""></p>
<p>5.选择<code>E:\Program Files\Java\jre7</code>，单击<code>next</code>：<br><img src="http://chuantu.biz/t5/86/1494843917x2890173777.png" alt=""></p>
<p>6.选择安装目录，安装到<code>E:\Program Files\Apache Software Foundation\Tomcat 7.0</code>单击<code>next</code>：<br><img src="http://chuantu.biz/t5/86/1494843952x2890173777.png" alt=""></p>
<p>7.安装完成<br><img src="http://chuantu.biz/t5/86/1494843979x2890173777.png" alt=""></p>
<h3 id="配置Tomcat环境变量"><a href="#配置Tomcat环境变量" class="headerlink" title="配置Tomcat环境变量"></a>配置Tomcat环境变量</h3><table>
<thead>
<tr>
<th style="text-align:left">环境变量</th>
<th>路径</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">TOMCAT_HOME</td>
<td>E:\Program Files\Tomcat7.0</td>
</tr>
<tr>
<td style="text-align:left">CATALINA_HOME</td>
<td>E:\Program Files\Tomcat7.0</td>
</tr>
<tr>
<td style="text-align:left">classpath</td>
<td>%CATALINA_HOME%\lib\servlet-api.jar;</td>
</tr>
</tbody>
</table>
<h3 id="验证Tomcat"><a href="#验证Tomcat" class="headerlink" title="验证Tomcat"></a>验证Tomcat</h3><p>8.在<code>E:\Program Files\Tomcat7.0\bin</code>选择<code>Tomcat7.exe</code>启动服务器<br><img src="http://chuantu.biz/t5/86/1494844040x2890173777.png" alt=""></p>
<p>9.启动完成<br><img src="http://chuantu.biz/t5/86/1494844068x2890173777.png" alt=""></p>
<p>10.访问服务器：<a href="http://localhost:8080/" target="_blank" rel="external">http://localhost:8080/</a><br><img src="http://chuantu.biz/t5/86/1494844094x2890173777.png" alt=""><br><code>若出现此网页，则安装成功！</code></p>
<h2 id="MyEclipse安装与配置"><a href="#MyEclipse安装与配置" class="headerlink" title="MyEclipse安装与配置"></a>MyEclipse安装与配置</h2><p><code>MyEclipse，是在eclipse 基础上加上自己的插件开发而成的功能强大的企业级集成开发环境，主要用于Java、Java EE以及移动应用的开发。MyEclipse的功能非常强大，支持也十分广泛，尤其是对各种开源产品的支持相当不错。</code></p>
<h3 id="安装MyEclipse"><a href="#安装MyEclipse" class="headerlink" title="安装MyEclipse"></a>安装MyEclipse</h3><p>1.双击安装包，进入安装的步骤，就能进入安装过程，等这个进入条到了百分之百进行下一步。<br><img src="http://chuantu.biz/t5/86/1494844173x2890173777.png" alt=""></p>
<p>2.然后进入到等进度条完成以后进入下一步。<br><img src="http://chuantu.biz/t5/86/1494844203x2890173777.png" alt=""></p>
<p>3.点击next，然后进入进图条界面，然后进入的界面将复选框选中。不然不能点击下一步哦，<br><img src="http://chuantu.biz/t5/86/1494844226x2890173777.png" alt=""><br><img src="http://chuantu.biz/t5/86/1494844260x2890173777.png" alt=""></p>
<p>4.点击下一步，选择一个其E盘的安装路径<code>E:\Program Files\myeclipse_8.6</code>，然后安装即可。<br><img src="http://chuantu.biz/t5/86/1494844544x2890173777.png" alt=""></p>
<p>5.进入这个页面后，等待一下，稍有点慢。<br><img src="http://i.imgur.com/qXdg4Fv.png" alt=""></p>
<p>6.等安装完以后，它会自动启动，选择<code>E:\work\workspace</code>路径<br><img src="http://i.imgur.com/xORl7wM.png" alt=""></p>
<h3 id="配置MyEclipse"><a href="#配置MyEclipse" class="headerlink" title="配置MyEclipse"></a>配置MyEclipse</h3><p>7.<code>集成jdk</code></p>
<p>（1）在<code>Java-Installed JREs</code>下，点击右边的<code>add</code>按钮，弹出安装选择框，选择<code>Standard VM</code>，然后<code>next</code>。<br><img src="http://i.imgur.com/iuflLif.png" alt=""></p>
<p>（2）在接下来弹出的选择安装目录选择框中，选择本电脑上的<code>jdk的安装目录</code>。<br><img src="http://i.imgur.com/eUKT05W.png" alt=""></p>
<p>（3）选择完成后，返回jdk列表，<code>勾选</code>刚添加的jdk。<br><img src="http://i.imgur.com/natp12L.png" alt=""><br>8.<code>集成tomcat</code></p>
<p>（1）在<code>Myeclipse</code> -<code>Servers</code>-<code>Tomcat</code>-<code>Tomcat</code> 7.x路径下，将<code>tomcat server</code>由<code>disable</code> 变成 <code>enable</code>。</p>
<p>选择<code>tomcat home directory</code>的安装路径，即本机安装<code>tomcat</code>的路径。当选择了tomcat home directory路径后，<code>tomcat base directory</code>和<code>tomcat temp directory</code>的路径会自动带出，不需要修改。<br><img src="http://i.imgur.com/upTUujc.png" alt=""></p>
<p>（2）展开<code>Myeclipse</code> -<code>Servers</code>-<code>Tomcat</code>-<code>Tomcat 7.x</code>的下拉选项，选择JDK，在<code>Tomcat JDK name</code>下拉框中选择在本机安装的jdk。<br><img src="http://i.imgur.com/3WXOgbB.png" alt=""></p>
<p>（3）将Launch由debug模式改成run模式。最后，点击apply按钮。<br><img src="http://i.imgur.com/XU7p362.png" alt=""></p>
<p>9.将各类文档的编码改为<code>utf-8</code><br>在<code>Myeclipse-Files and Editors</code>下，将所有编码设为UTF-8<br><img src="http://i.imgur.com/s7apoWJ.png" alt=""><br><img src="http://i.imgur.com/JQDwpNw.png" alt=""></p>
<p>10.将<code>tomcat的编码改为utf-8</code></p>
<p>在Tomcat安装文件夹下的<code>conf文件夹</code>下修改<code>server.xml</code>文件，即在<code>&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot; connectionTimeout=&quot;20000&quot;  redirectPort=&quot;8443&quot; /&gt;</code>中填加<code>URIEncoding=&quot;UTF-8&quot;</code>。<br><img src="http://i.imgur.com/7YYyYEN.png" alt=""></p>
<p>11.<code>MyEclipse的提示功能</code></p>
<p>打开<code>Java – Editor - Content Assist</code>面板，在<code>Auto – Activation</code>下：勾选<code>enable auto  activation</code></p>
<p>在<code>Auto activation trigger for Java</code>的输入框中输入：<code>abcdefgihjklmnopqrstuvwxyz(,</code><br>保存设置<br><img src="http://i.imgur.com/c0riSjp.png" alt=""></p>
<h3 id="注册MyEclipse"><a href="#注册MyEclipse" class="headerlink" title="注册MyEclipse"></a>注册MyEclipse</h3><p>1.点击工具栏<code>File--New--Java Project</code>,工程命名为<code>Register(注册)</code>,点击Finish。<br><img src="http://i.imgur.com/2knstKn.png" alt=""></p>
<p>2.在<strong>src</strong>文件夹右击选择<code>New--Package</code>,命名为<code>test</code>，点击Finish。<br><img src="http://i.imgur.com/57ecWTs.png" alt=""></p>
<p>3.在<strong>test</strong>文件夹右击选择<code>New--Class</code>,命名为<code>MyEclipseKeyGen</code>，点击Finish。<br><img src="http://i.imgur.com/wGUDxSO.png" alt=""></p>
<p>4.打开<code>.txt注册文件</code>,<code>Ctrl+A</code>选择全部，<code>Ctrl+C</code>复制，把内容<code>Ctrl+V</code>粘贴到刚刚新建的java源文件,<code>Ctrl+S</code>保存.<br><a href="http://pan.baidu.com/s/1pKTHgsN" target="_blank" rel="external">注册文件下载</a></p>
<p><img src="http://i.imgur.com/z9SVPsJ.png" alt=""><br><img src="http://i.imgur.com/Loc1BE9.png" alt=""></p>
<p>5.点击Run，在下方控制台自定义输入内容，回车结束。<br><img src="http://i.imgur.com/dt3kOUo.png" alt=""></p>
<p>6.点击工具栏上的<code>MyEclipse--subscription information</code>,填上你刚刚注册的序列号。<br><code>注意：注册时必需断掉网络，不然注册不成功！</code><br><img src="http://i.imgur.com/354ytp1.png" alt=""><br><img src="http://i.imgur.com/QdL4AOx.png" alt=""></p>
<p>这样就注册好了，尽情使用吧~~~</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Java-Web环境搭建&quot;&gt;&lt;a href=&quot;#Java-Web环境搭建&quot; class=&quot;headerlink&quot; title=&quot;Java Web环境搭建&quot;&gt;&lt;/a&gt;Java Web环境搭建&lt;/h1&gt;&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; cla
    
    </summary>
    
    
      <category term="Java Web" scheme="shawcz.github.io/tags/Java-Web/"/>
    
  </entry>
  
  <entry>
    <title>Java 数组</title>
    <link href="shawcz.github.io/2017/03/09/Java%E6%95%B0%E7%BB%84/"/>
    <id>shawcz.github.io/2017/03/09/Java数组/</id>
    <published>2017-03-09T06:36:16.000Z</published>
    <updated>2017-03-17T03:24:32.035Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java数组-Array"><a href="#Java数组-Array" class="headerlink" title="Java数组:Array"></a>Java数组:Array</h1><h2 id="一、数组的常用方法"><a href="#一、数组的常用方法" class="headerlink" title="一、数组的常用方法"></a>一、数组的常用方法</h2><h3 id="1-定义一个数组"><a href="#1-定义一个数组" class="headerlink" title="1.定义一个数组"></a>1.定义一个数组</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">int[] aArray = new int[10];               //动态定义</div><div class="line">String[] bArray = &#123;&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;&#125;       //两种静态定义方式</div><div class="line">String[] bArray = new String[]&#123;&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;&#125;</div></pre></td></tr></table></figure>
<p><code>注:(1)动态定义数组指定了数组的长度，但没有初始化值，没有给定具体的元素</code><br><code>(2)静态定义数组在分配内存空间的同时还初始化了值，即给定具体的元素</code></p>
<h3 id="2-打印一个数组-toString-方法"><a href="#2-打印一个数组-toString-方法" class="headerlink" title="2.打印一个数组:toString()方法"></a>2.打印一个数组:toString()方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">int[] intArray = &#123;1,2,3,4,5,6&#125;;</div><div class="line">String intArrayString = Arrays.toString(intAray);</div><div class="line"></div><div class="line">System.out.println(intArray);          </div><div class="line">//打印结果为乱码，因为intArray只是一个地址引用，存在与栈里；</div><div class="line"></div><div class="line">System.out.println(intArrayString);    </div><div class="line">//打印结果为[1,2,3,4,5,6]  通过Arrays.toString()方法转化打印出数组的具体数值</div></pre></td></tr></table></figure>
<h3 id="3-连接两个数组-ArrayUtils-addAll-方法"><a href="#3-连接两个数组-ArrayUtils-addAll-方法" class="headerlink" title="3.连接两个数组:ArrayUtils.addAll()方法"></a>3.连接两个数组:ArrayUtils.addAll()方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">int[] intArray1 = &#123; 1, 2, 3, 4, 5 &#125;;</div><div class="line">int[] intArray2 = &#123; 6, 7, 8, 9, 10 &#125;;</div><div class="line"></div><div class="line">int[] allArray = ArrayUtils.addAll(intArray, intArray2);</div><div class="line">//addAll方法将两个数组连接成一个数组</div></pre></td></tr></table></figure>
<h3 id="4-将数组中的元素以字符串的形式输出-StringUtils-join-方法"><a href="#4-将数组中的元素以字符串的形式输出-StringUtils-join-方法" class="headerlink" title="4.将数组中的元素以字符串的形式输出:StringUtils.join()方法"></a>4.将数组中的元素以字符串的形式输出:StringUtils.join()方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">int[] intArray = &#123;1,2,3,4,5,6&#125;;</div><div class="line">String j = StringUtils.join(new String[] &#123; &quot;a&quot;, &quot;b&quot;, &quot;c&quot; &#125;, &quot;, &quot;);</div><div class="line">System.out.println(j);</div><div class="line">// 打印结果：a, b, c</div></pre></td></tr></table></figure>
<p><code>注:使用StringUtils中的join方法，可以将数组中的元素以一个字符串的形式输出，同时要导入org.apache.commons.lang.StringUtils;</code></p>
<h3 id="5-从Array中创建ArrayList"><a href="#5-从Array中创建ArrayList" class="headerlink" title="5.从Array中创建ArrayList:"></a>5.从Array中创建ArrayList:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">int[] intArray = &#123;1,2,3,4&#125;;</div><div class="line">ArrayList&lt;int&gt; arrayList = new ArrayList&lt;int&gt;(Arrays.asList(intArray));</div><div class="line"></div><div class="line">System.out.println(arrayList);</div><div class="line">//打印结果为：[1,2,3,4]</div></pre></td></tr></table></figure>
<p><code>注：因为ArrayList是动态链表，将Array转换成ArrayList，可以更方便地对ArrayList进行增删改，不需要循环Array将每一个元素加入到ArrayList中，用以上的代码即可简单实现转换</code></p>
<h3 id="6-将Array转化成Set集合"><a href="#6-将Array转化成Set集合" class="headerlink" title="6.将Array转化成Set集合"></a>6.将Array转化成Set集合</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">String[] stringArray = &#123; &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot; &#125;;</div><div class="line">Set&lt;String&gt; set = new HashSet&lt;String&gt;(Arrays.asList(stringArray));</div><div class="line">System.out.println(set);</div><div class="line">//[d, e, b, c, a]</div></pre></td></tr></table></figure>
<p><code>注：在Java中使用Set，可以方便地将需要的类型以集合类型保存在一个变量中，主要应用在显示列表。同样可以先将Array转换成List，然后再将List转换成Set</code></p>
<h3 id="7-数组翻转-ArrayUtils-reverse-方法"><a href="#7-数组翻转-ArrayUtils-reverse-方法" class="headerlink" title="7.数组翻转:ArrayUtils.reverse()方法"></a>7.数组翻转:ArrayUtils.reverse()方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">int[] intArray = &#123; 6, 1, 3, 4, 5 &#125;;</div><div class="line">ArrayUtils.reverse(intArray);</div><div class="line">System.out.println(Arrays.toString(intArray));</div><div class="line">//打印结果：[5, 4, 3, 1, 6]</div></pre></td></tr></table></figure>
<h3 id="8-数组升序排列-Arrays-sort-方法"><a href="#8-数组升序排列-Arrays-sort-方法" class="headerlink" title="8.数组升序排列:Arrays.sort()方法"></a>8.数组升序排列:Arrays.sort()方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">int[] intArray=&#123;0,15,-14,45,20,70&#125;;  </div><div class="line">Arrays.sort(intArray); </div><div class="line">System.out.println(Arrays.toString(intArray));</div><div class="line">//打印结果：[-14, 0, 15, 20, 45, 70]</div></pre></td></tr></table></figure>
<p><code>注：导入java.util.arrays类可以进行数组的排序、比较和填充。当指定数组对象为null时，这些方法都抛出nullpointexception异常，要降序取数据可以从后到前循环。</code></p>
<h3 id="9-从数组中移除一个元素：ArrayUtils-removeElement-方法"><a href="#9-从数组中移除一个元素：ArrayUtils-removeElement-方法" class="headerlink" title="9.从数组中移除一个元素：ArrayUtils.removeElement()方法"></a>9.从数组中移除一个元素：ArrayUtils.removeElement()方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">int[] intArray = &#123; 1, 2, 3, 4, 5 &#125;;</div><div class="line">int[] removed = ArrayUtils.removeElement(intArray, 3);</div><div class="line">//重新定义一个数组来接受被移除数据后的数组</div><div class="line"></div><div class="line">System.out.println(Arrays.toString(removed));</div><div class="line">//打印结果：[1, 2, 4, 5]</div></pre></td></tr></table></figure>
<p><code>注：ArrayUtils.removeElement(int[] array, int element)方法参数中，第一个是传进去处理的数组，第二个参数是指该数组中的具体元素，注意不是索引</code></p>
<h3 id="10-检查数组中是否包含某一个值-Arrays-asList-contains-方法"><a href="#10-检查数组中是否包含某一个值-Arrays-asList-contains-方法" class="headerlink" title="10.检查数组中是否包含某一个值:Arrays.asList().contains()方法"></a>10.检查数组中是否包含某一个值:Arrays.asList().contains()方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">String[] stringArray = &#123; &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot; &#125;;</div><div class="line">boolean b = Arrays.asList(stringArray).contains(&quot;a&quot;);</div><div class="line">System.out.println(b);</div><div class="line">//打印结果： true</div></pre></td></tr></table></figure>
<h3 id="11-复制数组Arrays-copyOf-方法"><a href="#11-复制数组Arrays-copyOf-方法" class="headerlink" title="11.复制数组Arrays.copyOf()方法"></a>11.复制数组Arrays.copyOf()方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">int[] intArray = &#123;1, 2, 3, 4, 5&#125;;</div><div class="line">int[] intArray1 = Arrays.copyOf(intArray, 5);  </div><div class="line">int[] intArray2 = Arrays.copyOfRange(intArray, 1, 3);</div><div class="line">System.out.println(Arrays.toString(intArray1));</div><div class="line">//打印结果：[1,2,3,4,5]</div><div class="line">System.out.println(Arrays.toString(intArray2));</div><div class="line">//打印结果：[2,3]</div></pre></td></tr></table></figure>
<p><code>注：
int[] copyOf(int[] original, int newLength)复制数组，指定新数组长度     
int[] copyOfRange(int[] original, int from, int to)复制数组，指定所复制的原数组的索引</code></p>
<h3 id="12-比较两个数组是否相等-Arrays-equals-intArray1-intArray2-方法"><a href="#12-比较两个数组是否相等-Arrays-equals-intArray1-intArray2-方法" class="headerlink" title="12.比较两个数组是否相等:Arrays.equals(intArray1, intArray2)方法"></a>12.比较两个数组是否相等:Arrays.equals(intArray1, intArray2)方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">int[] intArray1 = &#123;1, 2, 3, 4, 5&#125;;</div><div class="line">int[] intArray2 = &#123;1, 2, 3, 4, 5&#125;;</div><div class="line">System.out.println(intArray1.equals(intArray2));</div><div class="line">//打印结果：false</div><div class="line">System.out.println(Arrays.equals(intArray1, intArray2));</div><div class="line">//打印结果：true</div></pre></td></tr></table></figure>
<p><code>注：intArray1.equals(intArray2)比较的是栈里的地址引用，Arrays.equals(intArray1, intArray2)比较的是数组内元素的具体值是否相同</code></p>
<h2 id="二、数组的常用属性"><a href="#二、数组的常用属性" class="headerlink" title="二、数组的常用属性"></a>二、数组的常用属性</h2><h3 id="1-length属性"><a href="#1-length属性" class="headerlink" title="1.length属性"></a>1.length属性</h3><blockquote>
<p>表示数组的长度，即数组中元素的个数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">int[] intArray = &#123;1, 2, 3, 4, 5&#125;;</div><div class="line">System.out.println(intArray.length);</div><div class="line">//打印结果为：5</div></pre></td></tr></table></figure></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Java数组-Array&quot;&gt;&lt;a href=&quot;#Java数组-Array&quot; class=&quot;headerlink&quot; title=&quot;Java数组:Array&quot;&gt;&lt;/a&gt;Java数组:Array&lt;/h1&gt;&lt;h2 id=&quot;一、数组的常用方法&quot;&gt;&lt;a href=&quot;#一、数组
    
    </summary>
    
    
      <category term="Java" scheme="shawcz.github.io/tags/Java/"/>
    
  </entry>
  
</feed>
